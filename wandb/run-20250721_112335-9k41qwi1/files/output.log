Using LocalLogger is deprecated. The constructor API will change
[36m(pid=7401)[0m /root/miniconda3/envs/venv/lib/python3.10/site-packages/vllm/connections.py:8: RuntimeWarning: Failed to read commit hash:
[36m(pid=7401)[0m No module named 'vllm._version'
[36m(pid=7401)[0m   from vllm.version import __version__ as VLLM_VERSION
[36m(pid=7595)[0m /root/miniconda3/envs/venv/lib/python3.10/site-packages/vllm/connections.py:8: RuntimeWarning: Failed to read commit hash:
[36m(pid=7595)[0m No module named 'vllm._version'
[36m(pid=7595)[0m   from vllm.version import __version__ as VLLM_VERSION
[36m(pid=7594)[0m /root/miniconda3/envs/venv/lib/python3.10/site-packages/vllm/connections.py:8: RuntimeWarning: Failed to read commit hash:
[36m(pid=7594)[0m No module named 'vllm._version'
[36m(pid=7594)[0m   from vllm.version import __version__ as VLLM_VERSION
[36m(WorkerDict pid=7595)[0m /fs-computility/mabasic/fanyuchen/Rethink-Search/ZeroSearch/verl/utils/tokenizer.py:29: UserWarning: tokenizer.pad_token_id is None. Now set to 128009
[36m(WorkerDict pid=7595)[0m   warnings.warn(f'tokenizer.pad_token_id is None. Now set to {tokenizer.eos_token_id}')
[36m(WorkerDict pid=7595)[0m You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
[36m(WorkerDict pid=7401)[0m Model config after override: LlamaConfig {
[36m(WorkerDict pid=7401)[0m   "_name_or_path": "/fs-computility/mabasic/shared/models/Llama-3.2-3B-Instruct",
[36m(WorkerDict pid=7401)[0m   "architectures": [
[36m(WorkerDict pid=7401)[0m     "LlamaForCausalLM"
[36m(WorkerDict pid=7401)[0m   ],
[36m(WorkerDict pid=7401)[0m   "attention_bias": false,
[36m(WorkerDict pid=7401)[0m   "attention_dropout": 0.0,
[36m(WorkerDict pid=7401)[0m   "bos_token_id": 128000,
[36m(WorkerDict pid=7401)[0m   "eos_token_id": 128009,
[36m(WorkerDict pid=7401)[0m   "head_dim": 128,
[36m(WorkerDict pid=7401)[0m   "hidden_act": "silu",
[36m(WorkerDict pid=7401)[0m   "hidden_size": 3072,
[36m(WorkerDict pid=7401)[0m   "initializer_range": 0.02,
[36m(WorkerDict pid=7401)[0m   "intermediate_size": 8192,
[36m(WorkerDict pid=7401)[0m   "max_position_embeddings": 131072,
[36m(WorkerDict pid=7401)[0m   "mlp_bias": false,
[36m(WorkerDict pid=7401)[0m   "model_type": "llama",
[36m(WorkerDict pid=7401)[0m   "num_attention_heads": 24,
[36m(WorkerDict pid=7401)[0m   "num_hidden_layers": 28,
[36m(WorkerDict pid=7401)[0m   "num_key_value_heads": 8,
[36m(WorkerDict pid=7401)[0m   "pad_token_id": 128009,
[36m(WorkerDict pid=7401)[0m   "pretraining_tp": 1,
[36m(WorkerDict pid=7401)[0m   "rms_norm_eps": 1e-05,
[36m(WorkerDict pid=7401)[0m   "rope_scaling": {
[36m(WorkerDict pid=7401)[0m     "factor": 32.0,
[36m(WorkerDict pid=7401)[0m     "high_freq_factor": 4.0,
[36m(WorkerDict pid=7401)[0m     "low_freq_factor": 1.0,
[36m(WorkerDict pid=7401)[0m     "original_max_position_embeddings": 8192,
[36m(WorkerDict pid=7401)[0m     "rope_type": "llama3"
[36m(WorkerDict pid=7401)[0m   },
[36m(WorkerDict pid=7401)[0m   "rope_theta": 500000.0,
[36m(WorkerDict pid=7401)[0m   "tie_word_embeddings": true,
[36m(WorkerDict pid=7401)[0m   "torch_dtype": "bfloat16",
[36m(WorkerDict pid=7401)[0m   "transformers_version": "4.47.1",
[36m(WorkerDict pid=7401)[0m   "use_cache": true,
[36m(WorkerDict pid=7401)[0m   "vocab_size": 128256
[36m(WorkerDict pid=7401)[0m }
[36m(WorkerDict pid=7401)[0m
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]
Loading checkpoint shards:  50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:00<00:00,  3.31it/s]
Loading checkpoint shards: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:00<00:00,  3.40it/s]
[36m(WorkerDict pid=7401)[0m NCCL version 2.20.5+cuda12.4
[36m(WorkerDict pid=7401)[0m LlamaForCausalLM contains 3.21B parameters
[36m(WorkerDict pid=7401)[0m wrap_policy: functools.partial(<function _or_policy at 0x7ef413816c20>, policies=[functools.partial(<function transformer_auto_wrap_policy at 0x7ef413816b00>, transformer_layer_cls={<class 'transformers.models.llama.modeling_llama.LlamaDecoderLayer'>})])
[36m(WorkerDict pid=7594)[0m Actor use_remove_padding=True
[36m(WorkerDict pid=7593)[0m wrap_policy: functools.partial(<function _or_policy at 0x7f9565b62c20>, policies=[functools.partial(<function transformer_auto_wrap_policy at 0x7f9565b62b00>, transformer_layer_cls={<class 'transformers.models.llama.modeling_llama.LlamaDecoderLayer'>})])[32m [repeated 3x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)[0m
[36m(WorkerDict pid=7401)[0m Model config after override: LlamaConfig {
[36m(WorkerDict pid=7401)[0m   "_name_or_path": "/fs-computility/mabasic/shared/models/Llama-3.2-3B-Instruct",
[36m(WorkerDict pid=7401)[0m   "architectures": [
[36m(WorkerDict pid=7401)[0m     "LlamaForCausalLM"
[36m(WorkerDict pid=7401)[0m   ],
[36m(WorkerDict pid=7401)[0m   "attention_bias": false,
[36m(WorkerDict pid=7401)[0m   "attention_dropout": 0.0,
[36m(WorkerDict pid=7401)[0m   "bos_token_id": 128000,
[36m(WorkerDict pid=7401)[0m   "eos_token_id": 128009,
[36m(WorkerDict pid=7401)[0m   "head_dim": 128,
[36m(WorkerDict pid=7401)[0m   "hidden_act": "silu",
[36m(WorkerDict pid=7401)[0m   "hidden_size": 3072,
[36m(WorkerDict pid=7401)[0m   "initializer_range": 0.02,
[36m(WorkerDict pid=7401)[0m   "intermediate_size": 8192,
[36m(WorkerDict pid=7401)[0m   "max_position_embeddings": 131072,
[36m(WorkerDict pid=7401)[0m   "mlp_bias": false,
[36m(WorkerDict pid=7401)[0m   "model_type": "llama",
[36m(WorkerDict pid=7401)[0m   "num_attention_heads": 24,
[36m(WorkerDict pid=7401)[0m   "num_hidden_layers": 28,
[36m(WorkerDict pid=7401)[0m   "num_key_value_heads": 8,
[36m(WorkerDict pid=7401)[0m   "pad_token_id": 128009,
[36m(WorkerDict pid=7401)[0m   "pretraining_tp": 1,
[36m(WorkerDict pid=7401)[0m   "rms_norm_eps": 1e-05,
[36m(WorkerDict pid=7401)[0m   "rope_scaling": {
[36m(WorkerDict pid=7401)[0m     "factor": 32.0,
[36m(WorkerDict pid=7401)[0m     "high_freq_factor": 4.0,
[36m(WorkerDict pid=7401)[0m     "low_freq_factor": 1.0,
[36m(WorkerDict pid=7401)[0m     "original_max_position_embeddings": 8192,
[36m(WorkerDict pid=7401)[0m     "rope_type": "llama3"
[36m(WorkerDict pid=7401)[0m   },
[36m(WorkerDict pid=7401)[0m   "rope_theta": 500000.0,
[36m(WorkerDict pid=7401)[0m   "tie_word_embeddings": true,
[36m(WorkerDict pid=7401)[0m   "torch_dtype": "bfloat16",
[36m(WorkerDict pid=7401)[0m   "transformers_version": "4.47.1",
[36m(WorkerDict pid=7401)[0m   "use_cache": true,
[36m(WorkerDict pid=7401)[0m   "vocab_size": 128256
[36m(WorkerDict pid=7401)[0m }
[36m(WorkerDict pid=7401)[0m
[36m(WorkerDict pid=7401)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in LlamaForCausalLM is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`
[36m(pid=7593)[0m /root/miniconda3/envs/venv/lib/python3.10/site-packages/vllm/connections.py:8: RuntimeWarning: Failed to read commit hash:
[36m(pid=7593)[0m No module named 'vllm._version'
[36m(pid=7593)[0m   from vllm.version import __version__ as VLLM_VERSION
[36m(WorkerDict pid=7401)[0m /fs-computility/mabasic/fanyuchen/Rethink-Search/ZeroSearch/verl/utils/tokenizer.py:29: UserWarning: tokenizer.pad_token_id is None. Now set to 128009[32m [repeated 4x across cluster][0m
[36m(WorkerDict pid=7401)[0m   warnings.warn(f'tokenizer.pad_token_id is None. Now set to {tokenizer.eos_token_id}')[32m [repeated 4x across cluster][0m
[36m(WorkerDict pid=7593)[0m You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.[32m [repeated 3x across cluster][0m
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][32m [repeated 3x across cluster][0m
Loading checkpoint shards:  50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:00<00:00,  2.30it/s][32m [repeated 3x across cluster][0m
Loading checkpoint shards: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:00<00:00,  2.77it/s][32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=7594)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in LlamaForCausalLM is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=7594)[0m /fs-computility/mabasic/fanyuchen/Rethink-Search/ZeroSearch/verl/utils/tokenizer.py:29: UserWarning: tokenizer.pad_token_id is None. Now set to 128009[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=7594)[0m   warnings.warn(f'tokenizer.pad_token_id is None. Now set to {tokenizer.eos_token_id}')[32m [repeated 3x across cluster][0m
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s][32m [repeated 4x across cluster][0m
Loading checkpoint shards:  50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:05<00:05,  5.82s/it]
Loading checkpoint shards:  50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:05<00:05,  5.85s/it]
Loading checkpoint shards: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:07<00:00,  3.81s/it]
[36m(WorkerDict pid=7401)[0m LlamaForCausalLM contains 3.21B parameters
[36m(WorkerDict pid=7401)[0m Actor use_remove_padding=True[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=7401)[0m wrap_policy: functools.partial(<function _or_policy at 0x7ef413816c20>, policies=[functools.partial(<function transformer_auto_wrap_policy at 0x7ef413816b00>, transformer_layer_cls={<class 'transformers.models.llama.modeling_llama.LlamaDecoderLayer'>})])
[36m(WorkerDict pid=7595)[0m wrap_policy: functools.partial(<function _or_policy at 0x7efcaa166c20>, policies=[functools.partial(<function transformer_auto_wrap_policy at 0x7efcaa166b00>, transformer_layer_cls={<class 'transformers.models.llama.modeling_llama.LlamaDecoderLayer'>})])
[36m(WorkerDict pid=7595)[0m Total steps: 3310, num_warmup_steps: 66
[36m(WorkerDict pid=7401)[0m Before building vllm rollout, memory allocated (GB): 2.9921345710754395, memory reserved (GB): 3.05859375
[36m(WorkerDict pid=7401)[0m WARNING 07-21 11:24:21 config.py:380] To see benefits of async output processing, enable CUDA graph. Since, enforce-eager is enabled, async output processor cannot be used
[36m(WorkerDict pid=7593)[0m Actor use_remove_padding=True[32m [repeated 4x across cluster][0m
[36m(WorkerDict pid=7593)[0m wrap_policy: functools.partial(<function _or_policy at 0x7f9565b62c20>, policies=[functools.partial(<function transformer_auto_wrap_policy at 0x7f9565b62b00>, transformer_layer_cls={<class 'transformers.models.llama.modeling_llama.LlamaDecoderLayer'>})])[32m [repeated 2x across cluster][0m
[36m(WorkerDict pid=7593)[0m Total steps: 3310, num_warmup_steps: 66[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=7401)[0m local rank 0
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] ibvwrap.c:66 NCCL WARN Call to ibv_open_device failed
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] p2p_plugin.c:233 NCCL WARN NET/IB : Unable to open device mlx5_1
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] ibvwrap.c:66 NCCL WARN Call to ibv_open_device failed
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] p2p_plugin.c:233 NCCL WARN NET/IB : Unable to open device mlx5_2
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] ibvwrap.c:66 NCCL WARN Call to ibv_open_device failed
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] p2p_plugin.c:233 NCCL WARN NET/IB : Unable to open device mlx5_3
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] ibvwrap.c:66 NCCL WARN Call to ibv_open_device failed
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] p2p_plugin.c:233 NCCL WARN NET/IB : Unable to open device mlx5_4
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] misc/ibvwrap.cc:113 NCCL WARN Call to ibv_open_device failed
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] transport/net_ib.cc:219 NCCL WARN NET/IB : Unable to open device mlx5_1
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] misc/ibvwrap.cc:113 NCCL WARN Call to ibv_open_device failed
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] transport/net_ib.cc:219 NCCL WARN NET/IB : Unable to open device mlx5_2
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] misc/ibvwrap.cc:113 NCCL WARN Call to ibv_open_device failed
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] transport/net_ib.cc:219 NCCL WARN NET/IB : Unable to open device mlx5_3
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] misc/ibvwrap.cc:113 NCCL WARN Call to ibv_open_device failed
[36m(WorkerDict pid=7595)[0m
[36m(WorkerDict pid=7595)[0m t-20250721191707-mp4hv-worker-0:7595:7952 [0] transport/net_ib.cc:219 NCCL WARN NET/IB : Unable to open device mlx5_4
[36m(WorkerDict pid=7595)[0m NCCL version 2.20.5+cuda12.4
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7594)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7593)[0m
[36m(WorkerDict pid=7401)[0m before init cache memory allocated: 9.680882176GB, reserved: 9.776922624GB
[36m(WorkerDict pid=7401)[0m after init cache memory allocated: 60.591344128GB, reserved: 60.687384576GB
[36m(WorkerDict pid=7401)[0m kwargs: {'n': 1, 'logprobs': 1, 'max_tokens': 4096, 'detokenize': False, 'temperature': 1.0, 'top_k': -1, 'top_p': 0.95, 'ignore_eos': False}
[36m(WorkerDict pid=7401)[0m After building vllm rollout, memory allocated (GB): 50.445385456085205, memory reserved (GB): 56.51953125
[36m(WorkerDict pid=7401)[0m After building sharding manager, memory allocated (GB): 50.445385456085205, memory reserved (GB): 56.51953125
[36m(WorkerDict pid=7401)[0m /root/miniconda3/envs/venv/lib/python3.10/site-packages/torch/distributed/fsdp/fully_sharded_data_parallel.py:689: FutureWarning: FSDP.state_dict_type() and FSDP.set_state_dict_type() are being deprecated. Please use APIs, get_state_dict() and set_state_dict(), which can support different parallelisms, FSDP1, FSDP2, DDP. API doc: https://pytorch.org/docs/stable/distributed.checkpoint.html#torch.distributed.checkpoint.state_dict.get_state_dict .Tutorial: https://pytorch.org/tutorials/recipes/distributed_checkpoint_recipe.html .
[36m(WorkerDict pid=7401)[0m   warnings.warn(
Loading checkpoint shards:  50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:06<00:06,  6.09s/it][32m [repeated 2x across cluster][0m
Loading checkpoint shards: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:08<00:00,  4.02s/it][32m [repeated 3x across cluster][0m
Error executing job with overrides: ['algorithm.adv_estimator=grpo', "data.train_files=['/fs-computility/mabasic/fanyuchen/Rethink-Search_tmp/verl_temp/ZeroSearch_dataset/train.parquet']", "data.val_files=['/fs-computility/mabasic/fanyuchen/Rethink-Search_tmp/verl_temp/ZeroSearch_dataset/test.parquet']", 'data.train_batch_size=256', 'data.max_prompt_length=1024', 'data.max_response_length=4096', 'actor_rollout_ref.model.path=/fs-computility/mabasic/shared/models/Llama-3.2-3B-Instruct', 'actor_rollout_ref.actor.optim.lr=1e-6', 'actor_rollout_ref.model.use_remove_padding=True', 'actor_rollout_ref.actor.ppo_mini_batch_size=256', 'actor_rollout_ref.actor.ppo_micro_batch_size=64', 'actor_rollout_ref.actor.use_kl_loss=True', 'actor_rollout_ref.actor.kl_loss_coef=0.001', 'actor_rollout_ref.actor.kl_loss_type=low_var_kl', 'actor_rollout_ref.actor.entropy_coeff=0', 'actor_rollout_ref.model.enable_gradient_checkpointing=True', 'actor_rollout_ref.actor.fsdp_config.param_offload=True', 'actor_rollout_ref.actor.optim.lr_warmup_steps_ratio=0.02', 'actor_rollout_ref.actor.fsdp_config.optimizer_offload=True', 'actor_rollout_ref.rollout.log_prob_micro_batch_size=128', 'actor_rollout_ref.rollout.tensor_model_parallel_size=1', 'actor_rollout_ref.rollout.name=vllm', 'actor_rollout_ref.rollout.gpu_memory_utilization=0.7', 'actor_rollout_ref.rollout.n_agent=5', 'actor_rollout_ref.ref.fsdp_config.param_offload=True', 'trainer.val_before_train=False', 'trainer.critic_warmup=0', 'trainer.logger=[console,wandb]', 'trainer.project_name=Rethink Search Scaling', 'trainer.experiment_name=llama_3.1_8b_inst_grpo_init', 'trainer.n_gpus_per_node=4', 'trainer.val_before_train=False', 'trainer.nnodes=1', 'trainer.save_freq=10000', 'trainer.test_freq=16', 'trainer.total_epochs=5']
Traceback (most recent call last):
  File "/fs-computility/mabasic/fanyuchen/Rethink-Search/ZeroSearch/verl/trainer/main_ppo.py", line 156, in main
    main_task(config)
  File "/fs-computility/mabasic/fanyuchen/Rethink-Search/ZeroSearch/verl/trainer/main_ppo.py", line 229, in main_task
    trainer.fit()
  File "/fs-computility/mabasic/fanyuchen/Rethink-Search/ZeroSearch/verl/trainer/ppo/ray_trainer.py", line 720, in fit
    gen_config = GenerationConfig(
TypeError: GenerationConfig.__init__() got an unexpected keyword argument 'retriever_ip'

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
